{"version":3,"sources":["services/poems.js","Poem.js","PoemList.js","Home.js","PoemEdit.js","PoemView.js","PoemForm.js","App.js","index.js"],"names":["baseURL","axios","defaults","headers","common","get","then","response","data","newObject","post","object","votes","id","title","author","authorid","text","put","delete","Poem","poem","addVote","useState","readMore","setReadMore","className","to","type","onClick","substr","console","log","PoemList","props","poems","map","p","Home","addPoemError","setAddPoemError","redirect","setRedirect","PoemEdit","editPoem","setEditMode","formInfo","setFormInfo","inputHandler","event","input","target","attributes","name","value","onSubmit","preventDefault","htmlFor","onChange","required","rows","cols","href","PoemView","deletePoem","editMode","Number","useParams","find","PoemForm","createPoem","initialState","App","setPoems","useEffect","PoemsService","content","catch","error","status","path","concat","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91c2598f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL = \"/api/poems\"\r\n\r\n//added bob header\r\naxios.defaults.headers.common['bob'] = 'Bobalooba'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseURL)\r\n                .then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    return  axios.post(baseURL, newObject)\r\n                 .then(response => response.data)\r\n}\r\n\r\nconst vote = (object) => {\r\n    const votes = object.votes + 1\r\n    return axios.post(baseURL + \"/\" + object.id,\r\n    {\r\n        id: object.id,\r\n        title: object.title,\r\n        author: object.author,\r\n        authorid: object.authorid,\r\n        text: object.text,\r\n        votes: votes\r\n      })\r\n                .then(response => response.data)\r\n}\r\n\r\nconst editPoem = (object) => {\r\n    return axios.put(baseURL + \"/\" + object.id, \r\n    {\r\n        id: object.id,\r\n        title: object.title,\r\n        author: object.author,\r\n        authorid: object.authorid,\r\n        text: object.text,\r\n        votes: object.votes\r\n      })\r\n                .then(response => response.data)\r\n}\r\n\r\nconst deletePoem = (id) => {\r\n    return axios.delete(baseURL + \"/\" + id)\r\n                .then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, vote, editPoem, deletePoem}","//markdown from react\r\nimport ReactMarkdown from 'react-markdown'\r\nimport ReactDom from 'react-dom'\r\nimport React, {useState} from 'react';\r\n//router\r\nimport {\r\n  BrowserRouter as Router, Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\nconst Poem = ({poem, addVote}) => {\r\n  //need to add limit to peom text and a read more button\r\n    const [readMore, setReadMore] = useState(false)\r\n    \r\n    const submitVote = () => {\r\n      console.log(\"Add Vote to poem \", poem)\r\n      addVote(poem)\r\n    }\r\n\r\n    return (\r\n      <ul className=\"list-unstyled\">\r\n        <li><Link to={`/api/poems/${poem.id}`}><h3 className=\"display-3\">{poem.title}</h3></Link></li>\r\n        <li>Author: {poem.author}</li>\r\n        {readMore\r\n          ? <li><ReactMarkdown className=\"lead\">{poem.text}</ReactMarkdown> <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>setReadMore(!readMore)}>Collapse</button></li>\r\n          : <li><ReactMarkdown className=\"lead\">{poem.text.substr(0,300)}</ReactMarkdown> ... <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={()=>setReadMore(!readMore)}>read more</button></li>\r\n        }\r\n        <li>Votes: {poem.votes}  <button type=\"button\" className=\"btn btn-secondary\" onClick={submitVote}>+ Vote</button></li>\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default Poem","import Poem from './Poem.js'\r\n\r\nconst PoemList = (props) => {\r\n    const {poems, addVote} = props\r\n    return(\r\n    <ul className=\"list-group\">{poems.map(p => \r\n        <li key={p.id} className=\"list-group-item\">\r\n          <Poem poem = {p} addVote={addVote}/>\r\n        </li>)}  \r\n      </ul>\r\n    )\r\n  }\r\n\r\n  export default PoemList","//import poemlist.js to display the list of poems\r\nimport PoemList from './PoemList'\r\n\r\nconst Home = ({poems, addVote, addPoemError, setAddPoemError, redirect, setRedirect}) => {\r\n    if(redirect){\r\n        setRedirect(false)\r\n    }\r\n    if(addPoemError){\r\n        setAddPoemError(false)\r\n    }\r\n    return (\r\n    \r\n    <div className=\"container\">\r\n        <div className=\"row mx-auto\">\r\n            <h1>Poem World</h1>\r\n            <PoemList poems={poems} addVote={addVote}/>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst PoemEdit = ({poem, editPoem, setEditMode}) => {\r\n  \r\n    const [formInfo, setFormInfo] = useState(poem)\r\n\r\n    const inputHandler = (event) => {\r\n        const input = event.target.attributes.name.value\r\n        console.log(input, event.target.value)\r\n\r\n        if(input === \"title\") {\r\n            setFormInfo({...formInfo, title: event.target.value})\r\n        } else if (input === \"author\"){\r\n            setFormInfo({...formInfo, author: event.target.value})\r\n        } else if (input === \"authorid\"){\r\n            setFormInfo({...formInfo, authorid: event.target.value})\r\n        } else if (input === \"text\"){\r\n            setFormInfo({...formInfo, text: event.target.value})\r\n        }\r\n        console.log(\"setFormInfo\")\r\n    }\r\n\r\n    const formHandler = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"Form submitted: \", formInfo);\r\n        editPoem(formInfo)\r\n        setFormInfo(formInfo)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={formHandler}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor='title' className=\"form-label\" >Poem Title</label>\r\n                    <input value={formInfo.title} name='title' className=\"form-control\" onChange={inputHandler} required></input>\r\n                </div>\r\n                <div className=\"col-mb-6\">\r\n                    <label htmlFor='author' className=\"form-label\" >Author</label>\r\n                    <input value={formInfo.author} name='author' className=\"form-control\" onChange={inputHandler} required></input>\r\n                </div>\r\n                <div className=\"col-mb-3\">\r\n                    <label htmlFor='authorid' className=\"form-label\" >Author ID</label>\r\n                    <input value={formInfo.authorid} name='authorid' type='number' className=\"form-control\" onChange={inputHandler} required></input>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor='text' className=\"form-label\">Poem Text</label>\r\n                    <textarea value={formInfo.text} name='text' className=\"form-control\" rows=\"10\" cols=\"50\" onChange={inputHandler} required></textarea>\r\n                </div>\r\n                    <button type='submit' className=\"col btn btn-success\">Submit Edit</button>\r\n            </form>\r\n            <p>**Note: use mark down syntax to format your text. Refer to mark down guide for baic syntax.</p>  \r\n            <a href=\"https://www.markdownguide.org/basic-syntax/\" target=\"_blank\">https://www.markdownguide.org/basic-syntax/</a>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PoemEdit","//markdown from react\r\nimport ReactMarkdown from 'react-markdown'\r\nimport ReactDom from 'react-dom'\r\nimport React, { useState } from 'react'\r\n\r\n//react router manage web pages\r\nimport {useParams} from \"react-router-dom\"\r\nimport PoemEdit from './PoemEdit.js'\r\n\r\nconst PoemView = ({poems, addVote, editPoem, deletePoem, setRedirect}) => {\r\n    //display individual poem\r\n    //added vote\r\n    const [editMode, setEditMode] = useState(false)\r\n    const id = Number(useParams().id)\r\n    const poem = poems.find(p => p.id === id)\r\n\r\n    const deleteHandler = () => {\r\n        console.log('delete button is pressed for: ', id)\r\n        setRedirect(true)\r\n        deletePoem(id)\r\n    }\r\n  \r\n    const editHandler = () => {\r\n        console.log(\"edit button has been pressed for id:\", id)\r\n        setEditMode(true)\r\n    }\r\n\r\n    const submitVote = () => {\r\n        console.log(\"Add Vote to poem \", poem)\r\n        addVote(poem)\r\n    }\r\n\r\n    if (poem){\r\n        console.log(\"poem is \", poem)\r\n        if(editMode){\r\n            console.log(\"edit poem here\");\r\n            return(<PoemEdit poem={poem} editPoem={editPoem} setEditMode={setEditMode}/>)  \r\n        } else {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row gap-3\">\r\n                    <ul className=\"list-unstyled\">\r\n                        <li className=\"list-group-item\"><h3>{poem.title}</h3></li>\r\n                        <li className=\"list-group-item\">Author: {poem.author}</li>\r\n                        <li className=\"list-group-item\"><ReactMarkdown>{poem.text}</ReactMarkdown></li>\r\n                        <li className=\"list-group-item\">Vote: {poem.votes} <button type=\"button\" className=\"btn btn-secondary\" onClick={submitVote}>+ Vote</button></li>\r\n                        <button type=\"button\" className=\"col btn btn-success\" onClick={editHandler}>Edit</button>\r\n                        <button type=\"button\" className=\"col btn btn-danger\" onClick={deleteHandler}>Delete</button>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return setRedirect(true)\r\n}  \r\n\r\nexport default PoemView","import React, { useState } from 'react' \r\nimport ReactMarkdown from 'react-markdown' \r\n\r\nconst PoemForm = ({createPoem, addPoemError, setAddPoemError, setRedirect}) => {\r\n\r\n    const initialState = {title: '', author: '', authorid: 0, text: ''}\r\n\r\n    const [formInfo, setFormInfo] = useState(initialState)\r\n\r\n    const inputHandler = (event) => {\r\n        const input = event.target.attributes.name.value\r\n        console.log(input, event.target.value)\r\n\r\n        if(input === \"title\") {\r\n            setFormInfo({...formInfo, title: event.target.value})\r\n        } else if (input === \"author\"){\r\n            setFormInfo({...formInfo, author: event.target.value})\r\n        } else if (input === \"authorid\"){\r\n            setFormInfo({...formInfo, authorid: event.target.value})\r\n        } else if (input === \"text\"){\r\n            setFormInfo({...formInfo, text: event.target.value})\r\n        }\r\n        console.log(\"setFormInfo\")\r\n    }\r\n\r\n\r\n    const formHandler = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"Form submitted: \", formInfo);\r\n        createPoem(formInfo)\r\n        setFormInfo(initialState)\r\n        setRedirect(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={formHandler}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor='title' className=\"form-label\">Poem Title</label>\r\n                <input name='title' className=\"form-control\" onChange={inputHandler} required></input>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <label htmlFor='author' className=\"form-label\">Author</label>\r\n                <input name='author' className=\"form-control\" onChange={inputHandler} required></input>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <label htmlFor='authorid' className=\"form-label\">Author ID</label>\r\n                <input name='authorid' type='number' className=\"form-control\" onChange={inputHandler} required></input>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor='text' className=\"form-label\">Poem Text</label>\r\n                <textarea name='text' className=\"form-control\" rows=\"10\" cols=\"50\" onChange={inputHandler} required></textarea>\r\n            </div>\r\n                <button type='submit' className=\"col btn btn-success\">Add Poem</button>\r\n                {addPoemError ? <p>Error! Missing information</p> : <p></p>}\r\n            </form>\r\n            <p>**Note: use mark down syntax to format your text. Refer to mark down guide for baic syntax.</p>  \r\n            <a href=\"https://www.markdownguide.org/basic-syntax/\" target=\"_blank\">https://www.markdownguide.org/basic-syntax/</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PoemForm\r\n","import './App.css';\nimport React, {useState,useEffect} from 'react';\n//react router manage web pages\nimport {\n  BrowserRouter as Router, Switch, Route, Link, Redirect\n} from \"react-router-dom\"\n\n//import peoms service to send request to server\nimport PoemsService from './services/poems.js'\n//import pages home, poem, addPoem\nimport Home from './Home.js'\nimport PoemView from './PoemView.js'\nimport PoemForm from './PoemForm.js'\n\nfunction App() {\n\n  //set poems list\n  const [poems, setPoems] = useState([])\n  const [redirect, setRedirect] = useState(false)\n  const [addPoemError, setAddPoemError] = useState(false)\n\n  //get all poems\n  useEffect(() => {\n    console.log(\"effect is being run\")\n    PoemsService.getAll()\n    .then(response => {\n      console.log(\"we have a respinse\", response);\n      setPoems(response)\n    })\n  },\n  []);\n\n  //added new poem\n  const addPoem = (content) => {\n    PoemsService.create(content)\n    .then(object => {\n      console.log(\"POST resonse data\", object)\n      setPoems(poems.concat(object))\n      console.log(\"A new poem has been added\");\n    })\n    .catch(error => {\n      console.log(error.response.data)\n      setAddPoemError(true)\n    })\n  }\n\n  //add a vote to a poem\n  const addVote = (content) => {\n    PoemsService.vote(content)\n    .then(object => {\n      console.log(\"POST a vote to poem \", object)\n      setPoems(poems.map(p => p.id !== content.id ? p : object))\n    })\n    .catch(error => {\n      console.log(error)\n      if(error.response.status === 404){\n        console.log('Fail to add vote. Poem cannot be found!', error.response.status)\n      } else {\n        console.log(\"error!\", error.response.status)\n      }\n    })\n  }\n\n  //edit poem data\n  const editPoem = (content) => {\n    PoemsService.editPoem(content)\n    .then(object => {\n      console.log(\"PUT request response\", object)\n      setPoems(poems.map(p => p.id !== content.id ? p : object))\n      console.log(\"unit has been edited\", content.id)\n    })\n    .catch(error => {\n      console.log(error)\n      if(error.response.status === 404){\n        console.log('Fail to edit. Poem cannot be found!', error.response.status)\n      } else if (error.response.status === 400){\n        console.log('Missing information input. Bad request.', error.response.status)\n      } else {\n        console.log(\"error!\", error.response.status)\n      }\n    })\n  }\n\n  //delete Poem\n  const deletePoem = (id) => {\n    PoemsService.deletePoem(id)\n    .then(object => {\n      console.log(\"DELETE response\", object)\n      setPoems(poems.filter(p => p.id !== id))\n      console.log(\"Poem has been deleted\", id)\n    })\n    .catch(error => {\n      console.log(error)\n      if(error.response.status === 404){\n        console.log('Fail to delete. Poem cannot be found!', error.response.status)\n      } else {\n        console.log(\"error!\", error.response.status)\n      }\n      \n    })\n  }\n\n  const getMaxID = () => {\n    const maxId = poems.length > 0\n    ? Math.max(...poems.map(p => p.id))\n    : 0\n    return toString(maxId)\n}\n\n  return (\n      <Router>\n        <header>\n\n        </header>\n\n        <div className=\"navbar navbar-dark bg-dark\">\n          <div className=\"container-fluid\">\n             <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/poemForm\">Add Poem</Link>\n                </li>\n              </ul>\n           \n          </div>\n        </div>\n\n        <Switch>\n          <Route path=\"/poemForm\">\n            {redirect ? <Redirect to=\"/\" />:<PoemForm createPoem={addPoem} addPoemError={addPoemError} setAddPoemError={setAddPoemError} setRedirect={setRedirect}/>}\n          </Route>\n          <Route path=\"/api/poems/:id\">\n            {redirect ? <Redirect to=\"/\" />:<PoemView poems={poems} addVote={addVote} editPoem={editPoem} deletePoem={deletePoem} setRedirect={setRedirect}/>}\n          </Route>\n          <Route path=\"/\">\n          <Home poems={poems} addVote={addVote} addPoemError={addPoemError} setAddPoemError={setAddPoemError} redirect={redirect} setRedirect={setRedirect}/>\n          </Route>\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}